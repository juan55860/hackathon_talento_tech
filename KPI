KPI
1. Productividad (Día, Tarde, Noche) por producto.
-----------------------------------------------------------------
import pandas as pd

# Cargar datos
df = pd.read_csv('datasettalento.csv')

# KPI: Productividad por turno y producto
kpi_productividad = df.groupby(['turno', 'producto_id']).agg({
    'cantidad_producida': 'sum',
    'unidades_defectuosas': 'sum',
    'eficiencia_porcentual': 'mean',
    'operador_id': 'count'
}).round(2)

# Calcular tasa de defectos
kpi_productividad['tasa_defectos'] = (
    kpi_productividad['unidades_defectuosas'] / 
    kpi_productividad['cantidad_producida'] * 100
).round(2)

# Renombrar columnas
kpi_productividad = kpi_productividad.rename(columns={
    'cantidad_producida': 'total_producido',
    'unidades_defectuosas': 'total_defectuosas',
    'eficiencia_porcentual': 'eficiencia_promedio',
    'operador_id': 'total_produccion'
})

print("Productividad por Turno y Producto")
print("=" * 40)
print(kpi_productividad)

-----------------------------------------------------------------

2. Productividad por operador.
-----------------------------------------------------------------
import pandas as pd

# Cargar datos
df = pd.read_csv('Dataset_Talento.csv')

# KPI: Productividad por operador
kpi_productividad_operador = df.groupby('operador_id').agg({
    'cantidad_producida': 'sum',
    'unidades_defectuosas': 'sum',
    'eficiencia_porcentual': 'mean',
    'operador_id': 'count'
}).round(2)

# Calcular tasa de defectos
kpi_productividad_operador['tasa_defectos'] = (
    kpi_productividad_operador['unidades_defectuosas'] / 
    kpi_productividad_operador['cantidad_producida'] * 100
).round(2)

# Renombrar columnas
kpi_productividad_operador = kpi_productividad_operador.rename(columns={
    'cantidad_producida': 'total_producido',
    'unidades_defectuosas': 'total_defectuosas',
    'eficiencia_porcentual': 'eficiencia_promedio',
    'operador_id': 'total_registros'
})

# Ordenar por productividad total (descendente)
kpi_productividad_operador = kpi_productividad_operador.sort_values('total_producido', ascending=False)

print("Productividad por Operador")
print("=" * 40)
print(kpi_productividad_operador)
-----------------------------------------------------------------

3. Fallas de maquina por turno.
-----------------------------------------------------------------
import pandas as pd

# Cargar datos
df = pd.read_csv('Dataset_Talento.csv')

# KPI: Fallas de máquina por turno
kpi_fallas_turno = df[df['fallo_detectado'] == 'Sí'].groupby('turno').agg({
    'maquina_id': 'count',
    'tipo_fallo': 'value_counts'
}).round(2)

# Renombrar columnas
kpi_fallas_turno = kpi_fallas_turno.rename(columns={
    'maquina_id': 'total_fallas'
})

print("Fallas de Máquina por Turno")
print("=" * 40)
print(kpi_fallas_turno)
-----------------------------------------------------------------
4. Fallas de maquina por producto.
-----------------------------------------------------------------
import pandas as pd

# Cargar datos
df = pd.read_csv('Dataset_Talento.csv')

# KPI: Fallas de máquina por producto
kpi_fallas_producto = df[df['fallo_detectado'] == 'Sí'].groupby('producto_id').agg({
    'maquina_id': 'count',
    'tipo_fallo': 'value_counts'
}).round(2)

# Renombrar columnas
kpi_fallas_producto = kpi_fallas_producto.rename(columns={
    'maquina_id': 'total_fallas'
})

print("Fallas de Máquina por Producto")
print("=" * 40)
print(kpi_fallas_producto)
-----------------------------------------------------------------
5. Unidades defectuosas por producto.
-----------------------------------------------------------------
-----------------------------------------------------------------
6. Unidades defectuosas por maquina.
-----------------------------------------------------------------
-----------------------------------------------------------------
7. Unidades defectuosas por operador
-----------------------------------------------------------------
-----------------------------------------------------------------
8. Eficiencia por producto.
-----------------------------------------------------------------
-----------------------------------------------------------------
9. Eficiencia por operador.
-----------------------------------------------------------------
-----------------------------------------------------------------

